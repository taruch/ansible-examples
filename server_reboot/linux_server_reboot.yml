---
- name: Reboot a server and wait for it to come back online
  hosts: "{{ _hosts }}"
  become: yes # This task requires root privileges to reboot the server

  tasks:
    - name: Display a warning message before rebooting
      ansible.builtin.debug:
        msg: "Initiating server reboot on {{ inventory_hostname }}. This will cause a brief outage."

    - name: Reboot the server
      ansible.builtin.reboot:
        reboot_timeout: 600 # Wait up to 600 seconds (10 minutes) for the server to reboot and become reachable
        connect_timeout: 60 # Timeout for initial connection attempt to the server
        # post_reboot_delay: 30 # Optional: Add an additional delay after the server is reachable, before the task completes

    - name: Confirm server is back online
      ansible.builtin.wait_for_connection:
        delay: 10 # Initial delay before first connection attempt
        timeout: 300 # Total time to wait for the connection to be established (5 minutes)
      delegate_to: localhost # This task runs on the Ansible control node, waiting for the target
      # This task is often redundant if reboot_timeout is sufficient, but provides an explicit check.
      # It's particularly useful if you have subsequent tasks that rely on the server being fully up.

    - name: Display success message
      ansible.builtin.debug:
        msg: "Server {{ inventory_hostname }} has been successfully rebooted and is back online."