---
# You can retrieve secrets, keys, and certificates from Azure Key Vault using the azure.azcollection Ansible collection.

- name: Get secret from Azure Key Vault using lookup plugin
  hosts: localhost
  connection: local
  gather_facts: false

  collections:
    - azure.azcollection

  vars:
    key_vault_name: "myansiblekeyvault123" # Replace with your Key Vault name
    secret_name: "MyDatabasePassword"      # Replace with the name of your secret

    # Optional: If not using Managed Identity or AZ CLI login, provide Service Principal details
    # client_id: "YOUR_SERVICE_PRINCIPAL_APP_ID"
    # secret: "YOUR_SERVICE_PRINCIPAL_PASSWORD" # Or use Ansible Vault for this
    # tenant_id: "YOUR_AZURE_TENANT_ID"

  tasks:
    - name: Retrieve secret value from Azure Key Vault
      # The lookup plugin directly returns the secret's value.
      # You can specify the vault_url directly or construct it.
      # Assuming default Azure public cloud for vault_url, it's https://<vault_name>.vault.azure.net/
      set_fact:
        database_password: "{{ lookup('azure.azcollection.azure_keyvault_secret', secret_name, vault_url='https://' + key_vault_name + '.vault.azure.net/') }}"
        # If you need to pass SP credentials to the lookup, it would look like:
        # database_password: "{{ lookup('azure.azcollection.azure_keyvault_secret', secret_name, vault_url='https://' + key_vault_name + '.vault.azure.net/', client_id=client_id, secret=secret, tenant_id=tenant_id) }}"

    - name: Display the retrieved password (FOR DEBUGGING ONLY - AVOID IN PRODUCTION)
      debug:
        msg: "The retrieved password is: {{ database_password }}"
      # NEVER output sensitive information like passwords directly in production logs!
      # Instead, pass this variable to another task that uses it securely (e.g., configuring an application).

...
