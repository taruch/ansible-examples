---
controller_credentials:
  - name: "VMWARE vCenter Demo Credential"
    description: !unsafe ''
    credential_type: "VMWare Demo Credential"
    organization: "Default"
    inputs:
      host: vcsnsx-vc.infra.demo.redhat.com
      password: ''
      username: sandbox-dp7v4@demo
  - name: "VMWare Demo Credential"
    description: !unsafe ''
    credential_type: "Machine"
    organization: "Default"
    inputs:
      password: ''
      username: ansible

controller_inventories:
  - name: "VMWare Inventory Example"
    description: !unsafe ''
    organization: "Default"
    prevent_instance_group_fallback: False

controller_inventory_sources:
  - name: "VMWare vCenter"
    description: !unsafe ''
    organization: "Default"
    source: "vmware"
    limit: ""
    source_path: ""
    source_vars:
      group_by_paths: true
      properties:
      - name
      - config
      - guest
      - config.name
      - config.guestId
      - guest.hostName
      - guest.ipAddress
      - guest.guestFamily
      - guest.ipStack
      groups:
        cpu_hot_add_enabled: config.cpuHotAddEnabled
      keyed_groups:
      - key: guest.toolsStatus
        separator: ''
      - key: guest.toolsRunningStatus
        separator: ''
      search_paths:
      - /SDDC-Datacenter/vm/Workloads/sandbox-dp7v4
      filters:
      - config.template == false
      - guest.power_state == 'poweredOn'
      hostnames:
      - name
      compose:
        ansible_user: '''root'''
        ansible_connection: '''ssh'''
        datacenter: (path | split('/'))[1]
        cluster: (path | split('/'))[3]
    inventory: "VMWare Inventory Example"
    update_on_launch: "False"
    overwrite: "True"
    credential: "VMware Credentials"



  - name: "VMWare / Create VM"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Examples"
    inventory: "VMWare Inventory Example"
    playbook: "vmware_examples/vmware_provision.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 2
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "VMWARE vCenter Demo Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: true
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    labels:
      - "VMWare"
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_name
          new_question: True
          question_name: !unsafe "What is the VM name?"
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vcenter_folder
          new_question: False
          question_name: !unsafe "What is the vCenter Folder for the VM?"
          question_description: !unsafe "Enter the workload folder (sandbox-*)"
        - max: 1024
          min: 0
          type: text
          default: !unsafe "rhel9-template"
          required: False
          variable: vm_template
          new_question: False
          question_name: !unsafe "What VM template should be used?"
          question_description: !unsafe "Default RHEL 9 Template"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "VMWare / VM Power State Change"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Examples"
    inventory: "VMWare Inventory Example"
    playbook: "vmware_examples/vmware_power.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 1
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "VMWARE vCenter Demo Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    labels:
      - "VMWare"
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: multiplechoice
          choices:
            - "off"
            - "restart"
            - "on"
          default: !unsafe "on"
          required: True
          variable: vmpowerstate
          new_question: False
          question_name: !unsafe "What state do you want the VM in?"
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_name
          new_question: True
          question_name: !unsafe "What host do you want to manage?"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false


  - name: "VMWare / Hot Add CPU - RAM"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Examples"
    inventory: "VMWare Inventory Example"
    playbook: "vmware_examples/vmware_hotadd.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "VMWARE vCenter Demo Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars: ""
    job_tags: ""
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    labels:
      - "VMWare"
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_name
          new_question: True
          question_name: !unsafe "What host do you want to hot add resources to?"
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_memory_mb
          new_question: False
          question_name: !unsafe "Enter RAM (in MB) the host should have"
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_num_cpus
          new_question: True
          question_name: !unsafe "Enter CPU count the host should have"
        - max: 1024
          min: 0
          type: text
          default: !unsafe "sandbox-sj9tw"
          required: True
          variable: vcenter_folder
          new_question: True
          question_name: !unsafe "What folder is the vm in?"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "VMWare / Snapshot / Create"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Examples"
    inventory: "VMWare Inventory Example"
    playbook: "vmware_examples/vmware_snapshots.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "VMWARE vCenter Demo Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars:
      vcenter_datacenter: SDDC-Datacenter
      vcenter_folder: Workloads/sandbox-sj9tw
    job_tags: "snapshot_create"
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    labels:
      - "VMWare"
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_name
          new_question: True
          question_name: !unsafe "VM to create snapshot for"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

  - name: "VMWare / Snapshot / Delete"
    description: !unsafe ''
    organization: "Default"
    project: "Ansible Examples"
    inventory: "VMWare Inventory Example"
    playbook: "vmware_examples/vmware_snapshots.yml"
    scm_branch: ""
    forks: 0
    limit: ""
    verbosity: 0
    job_type: "run"
    job_slice_count: 1
    use_fact_cache: false
    credentials:
      - "VMWARE vCenter Demo Credential"
    allow_simultaneous: false
    ask_scm_branch_on_launch: false
    ask_diff_mode_on_launch: false
    ask_tags_on_launch: false
    ask_skip_tags_on_launch: false
    ask_job_type_on_launch: false
    ask_verbosity_on_launch: false
    ask_variables_on_launch: false
    ask_inventory_on_launch: false
    ask_limit_on_launch: false
    ask_credential_on_launch: false
    ask_execution_environment_on_launch: false
    ask_labels_on_launch: false
    ask_forks_on_launch: false
    ask_job_slice_count_on_launch: false
    ask_timeout_on_launch: false
    ask_instance_groups_on_launch: false
    extra_vars:
      vcenter_datacenter: SDDC-Datacenter
      vcenter_folder: Workloads/sandbox-sj9tw
    job_tags: "snapshot_remove_all"
    force_handlers: false
    skip_tags: ""
    start_at_task: ""
    timeout: 0
    custom_virtualenv: ""
    host_config_key: ""
    labels:
      - "VMWare"
    survey_enabled: true
    survey_spec:
      name: ""
      spec:
        - max: 1024
          min: 0
          type: text
          required: True
          variable: vm_name
          new_question: True
          question_name: !unsafe "VM to remove snapshots for"
      description: ""
    become_enabled: false
    diff_mode: false
    webhook_service: ""
    prevent_instance_group_fallback: false

controller_workflows:
  - name: "VMWare / Update VM OS"
    description: !unsafe ''
    organization: "ToDo: The WF 'VMWare / Update VM OS' must belong to an organization"
    simplified_workflow_nodes:
      - identifier: "Delete Snapshot"
        workflow_job_template: "VMWare / Update VM OS"
        unified_job_template: "VMWare / Snapshot / Delete"
        limit: ""
        organization: "ToDo: The WF 'VMWare / Update VM OS' must belong to an organization"
        all_parents_must_converge: "False"
      - identifier: "1ebcd854-8b56-42e6-9af6-357b2fbb0a47"
        workflow_job_template: "VMWare / Update VM OS"
        unified_job_template: "LINUX / coolstuff"
        limit: ""
        job_type: "check"
        organization: "ToDo: The WF 'VMWare / Update VM OS' must belong to an organization"
        all_parents_must_converge: "False"
        extra_data:
          _hosts: localhost
        success_nodes:
          - "Delete Snapshot"
      - identifier: "Create Snapshot"
        workflow_job_template: "VMWare / Update VM OS"
        unified_job_template: "VMWare / Snapshot / Create"
        limit: ""
        organization: "ToDo: The WF 'VMWare / Update VM OS' must belong to an organization"
        all_parents_must_converge: "False"
        success_nodes:
          - "1ebcd854-8b56-42e6-9af6-357b2fbb0a47"
    ask_variables_on_launch: "False"
    allow_simultaneous: "False"
    scm_branch: ""
    limit: ""
    ask_limit_on_launch: false
    ask_inventory_on_launch: false
    webhook_service: ""
    extra_vars: ""
    labels:
      - "VMWare"
    survey_enabled: false

  - name: "VMWare Provision from ServiceNow"
    description: !unsafe ''
    organization: "Default"
    simplified_workflow_nodes:
      - identifier: "Create VM"
        workflow_job_template: "VMWare Provision from ServiceNow"
        unified_job_template: "VMWare / Create VM"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
        success_nodes:
          - "Inventory Sync"
      - identifier: "Inventory Sync"
        workflow_job_template: "VMWare Provision from ServiceNow"
        unified_job_template: "VMWare vCenter"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
        always_nodes:
          - "Update Service Request"
      - identifier: "Update Service Request"
        workflow_job_template: "VMWare Provision from ServiceNow"
        unified_job_template: "SERVICENOW / Update and Close ITSM REQ"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
        always_nodes:
          - "Create SNOW CI"
      - identifier: "Create SNOW CI"
        workflow_job_template: "VMWare Provision from ServiceNow"
        unified_job_template: "SERVICENOW / Create CI for VM"
        limit: ""
        organization: "Default"
        all_parents_must_converge: "False"
    ask_variables_on_launch: "True"
    allow_simultaneous: "False"
    scm_branch: ""
    limit: ""
    ask_limit_on_launch: false
    ask_inventory_on_launch: false
    webhook_service: ""
    extra_vars: ""
    labels:
      - "VMWare"
    survey_enabled: false

...
